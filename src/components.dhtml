<script>
import { router } from '/@nue/app-router.js'
import { mount } from '/@nue/mount.js'
import { addTodo, removeTodo, todoState, toggleAll, setSelected } from '/model.js'

router.configure({ route: '/:filter/', persistent_params: ['todos'] })
if (window.app) await mount('app', window.app)
</script>


<div @name="app">
  <add-todo />
  <todos :items />
  <filters :if="items.length" />

  <script>
    items = Array.from( {length: Math.floor(Math.random() * 10)}, (i) => ({ id: i, done: Math.random() >= 0.5, text: 'hi ' + Math.random() }))

    mounted() { router.initialize({ root: this.root }) }
  </script>
</div>


<header @name="add-todo">
  <a href="/"><h1>todos</h1></a>
  <div>
    <input type="checkbox" id="toggle-all" @click="toggleAll">
    <input type="text" @keydown.enter="addTodo" placeholder="What needs to be done?">
  </div>

  <script>
    addTodo = addTodo
    toggleAll = toggleAll
  </script>
</header>


<footer @name="filters">
  <p>{0} items left</p>

  <div class="filters">
    <a href="/">All</a>
    <a href="/active/">Active</a>
    <a href="/completed/">Completed</a>
  </div>

  <button>Clear completed</button>

  <script>
    mounted() {
      router.bind('filter', (data, {path}) => {
        setSelected(`footer a[href="${path}"]`, 'aria-current', 'page')
      })
    }
  </script>
</footer>


<main @name="todos">
  <ul>
    <todo :for="e in items" :bind="e" />
  </ul>
</main>


<li @name="todo" class="todo">
  <input type="checkbox" :checked="done" @click="todoState">
  <p>{ text }</p>
  <button @click="removeTodo">&times;</button>

  <script>
    removeTodo = removeTodo
    todoState = todoState
  </script>
</li>
