<script>
  import { router } from '/@nue/app-router.js'
  import { mount } from '/@nue/mount.js'
  import { $ } from '/@nue/view-transitions.js'

  function setSelected(query, attr, val = true) {
    $(`[${attr}]`)?.removeAttribute(attr)
    $(query)?.setAttribute(attr, val)
  }

  router.configure({ route: '/:filter', persistent_params: ['todos'] })
  if (window.app) await mount('app', window.app)

  function add({ target }) {
    console.log({ done: false, text: Object.fromEntries(new FormData(target)).todo })
    target.reset()
    // router.set({ todos })
  }
  function remove({ target }) {
    console.log(target)
  }
  function state({ target }) {
    console.log(target)
  }
  function stateAll({ target }) {
    console.log(target)
  }
</script>


<div @name="app">
  <add-todo />
  <todos />
  <filters />

  <script>
    mounted() { router.initialize({ root: this.root }) }
  </script>
</div>


<header @name="add-todo">
  <h1>todos</h1>
  <form @submit.prevent="add">
    <input type="checkbox" @change="console.log">
    <input type="text" name="todo" placeholder="What needs to be done?">
  </form>

  <script>
    add = add
  </script>
</header>


<footer @name="filters">
  <p>{count} items left</p>
  <nav>
    <a href="/">All</a>
    <a href="/active/">Active</a>
    <a href="/completed/">Completed</a>
  </nav>
  <button>Clear completed</button>

  <script>
    count = 0

    mounted() {
      router.bind('filter', (data, { path }) => {
        setSelected(`footer a[href="${path}"]`, 'aria-current', 'page')
      })
    }
  </script>
</footer>


<main @name="todos">
  <ul>
    <todo :for="e in todos" :bind="e" />
  </ul>

  <script>
    todos = router.state.todos || []
  </script>
</main>


<li @name="todo">
  <input type="checkbox" :checked="done" @change="console.log">
  <p>{ text }</p>
  <button @click="console.log">&times;</button>

  <script>
  </script>
</li>
